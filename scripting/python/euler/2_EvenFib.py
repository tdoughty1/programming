# -*- coding: utf-8 -*-
"""
Solution to Euler problem 2:

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms..

https://projecteuler.net/problem=2

Created on Mon Apr 13 07:27:13 2015

@author: tdoughty1
"""


class Fib(object):

    def __init__(self):

        self._calculated = {}

    def __call__(self, index):

        if index in self._calculated:
            return self._calculated[index]

        if index == 0:
            return 1
        elif index == 1:
            return 2
        else:
            n = self.__call__(index-1) + self.__call__(index-2)
            self._calculated[index] = n
            return n

# Set of fib class
fib = Fib()

# Instantiate fib number, index, and total
current = 0
i = 0
total = 0

while i >= 0:
    current = fib(i)
    i += 1

    if current < 4000000:
        if not current % 2:
            total += current
    else:
        break

print total
